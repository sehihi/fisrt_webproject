{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samsung\\\\Documents\\\\GitHub\\\\fisrt_webproject\\\\create_app\\\\src\\\\components\\\\LeftContainer\\\\Notice\\\\Notice.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport \"./Notice.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notice = () => {\n  _s();\n  const chartRef = useRef(null); // 차트 렌더링을 위한 ref\n\n  useEffect(() => {\n    const fetchDataAndDrawChart = async () => {\n      try {\n        // 서버에서 데이터 가져오기\n        const response = await fetch(\"http://localhost:3001/n1-p1\");\n        const data = await response.json();\n\n        // 파이 차트를 그릴 컨텍스트\n        const ctx = chartRef.current.getContext(\"2d\");\n\n        // 파이 차트 데이터 설정\n        const chartData = {\n          labels: [\"근원부서 없음\", \"근원부서 존재\"],\n          datasets: [{\n            data: [data.근원부서_존재하지않음, data.근원부서_존재],\n            // 서버에서 받은 데이터\n            backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n            hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n          }]\n        };\n\n        // 파이 차트 생성\n        new Chart(ctx, {\n          type: \"pie\",\n          data: chartData,\n          options: {\n            responsive: true\n          }\n        });\n      } catch (error) {\n        console.error(\"데이터를 가져오는 중 오류 발생: \", error);\n      }\n    };\n    fetchDataAndDrawChart(); // 데이터 가져와서 차트 그리기\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notice\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      style: {\n        width: \"80%\",\n        height: \"80%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Notice, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Notice;\nexport default Notice;\nvar _c;\n$RefreshReg$(_c, \"Notice\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Notice","_s","chartRef","fetchDataAndDrawChart","response","fetch","data","json","ctx","current","getContext","chartData","labels","datasets","근원부서_존재하지않음","근원부서_존재","backgroundColor","hoverBackgroundColor","type","options","responsive","error","console","className","children","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/samsung/Documents/GitHub/fisrt_webproject/create_app/src/components/LeftContainer/Notice/Notice.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport \"./Notice.css\";\r\n\r\nconst Notice = () => {\r\n  const chartRef = useRef(null); // 차트 렌더링을 위한 ref\r\n\r\n  useEffect(() => {\r\n    const fetchDataAndDrawChart = async () => {\r\n      try {\r\n        // 서버에서 데이터 가져오기\r\n        const response = await fetch(\"http://localhost:3001/n1-p1\");\r\n        const data = await response.json();\r\n\r\n        // 파이 차트를 그릴 컨텍스트\r\n        const ctx = chartRef.current.getContext(\"2d\");\r\n\r\n        // 파이 차트 데이터 설정\r\n        const chartData = {\r\n          labels: [\"근원부서 없음\", \"근원부서 존재\"],\r\n          datasets: [\r\n            {\r\n              data: [data.근원부서_존재하지않음, data.근원부서_존재], // 서버에서 받은 데이터\r\n              backgroundColor: [\"#FF6384\", \"#36A2EB\"],\r\n              hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\r\n            },\r\n          ],\r\n        };\r\n\r\n        // 파이 차트 생성\r\n        new Chart(ctx, {\r\n          type: \"pie\",\r\n          data: chartData,\r\n          options: {\r\n            responsive: true,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"데이터를 가져오는 중 오류 발생: \", error);\r\n      }\r\n    };\r\n\r\n    fetchDataAndDrawChart(); // 데이터 가져와서 차트 그리기\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"notice\">\r\n      {/* <h2 style={{ width: \"20%\", height: \"20%\" }}>공정현황 그래프</h2> */}\r\n      <canvas\r\n        ref={chartRef}\r\n        style={{ width: \"80%\", height: \"80%\" }}\r\n      ></canvas>{\" \"}\r\n      {/* 차트가 그려질 캔버스 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notice;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMQ,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACA,MAAMC,GAAG,GAAGN,QAAQ,CAACO,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;QAE7C;QACA,MAAMC,SAAS,GAAG;UAChBC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAC9BC,QAAQ,EAAE,CACR;YACEP,IAAI,EAAE,CAACA,IAAI,CAACQ,WAAW,EAAER,IAAI,CAACS,OAAO,CAAC;YAAE;YACxCC,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;YACvCC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS;UAC7C,CAAC;QAEL,CAAC;;QAED;QACA,IAAIpB,KAAK,CAACW,GAAG,EAAE;UACbU,IAAI,EAAE,KAAK;UACXZ,IAAI,EAAEK,SAAS;UACfQ,OAAO,EAAE;YACPC,UAAU,EAAE;UACd;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAEDlB,qBAAqB,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAKwB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBAErBzB,OAAA;MACE0B,GAAG,EAAEvB,QAAS;MACdwB,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EAAC,GAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAnDID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAqDZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}