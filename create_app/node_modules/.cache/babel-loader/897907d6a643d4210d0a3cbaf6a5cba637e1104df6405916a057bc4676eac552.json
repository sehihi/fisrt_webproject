{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samsung\\\\Documents\\\\GitHub\\\\fisrt_webproject\\\\create_app\\\\src\\\\components\\\\GraphContainer\\\\Graph_5\\\\Graph5.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph5 = () => {\n  _s();\n  useEffect(() => {\n    let myPieChart;\n    let detailPieChart;\n    let detailChart;\n\n    // 차트를 생성하는 함수\n    const createCharts = async () => {\n      try {\n        const response = await fetch(\"/status-data2\");\n        const data = await response.json();\n        const ctx = document.getElementById(\"myPieChart\").getContext(\"2d\");\n        const chartData = {\n          labels: [\"정상\", \"불량\"],\n          datasets: [{\n            data: [data.정상, data.불량],\n            backgroundColor: [\"#36A2EB\", \"#FF6384\"],\n            hoverBackgroundColor: [\"#36A2EB\", \"#FF6384\"]\n          }]\n        };\n        myPieChart = new Chart(ctx, {\n          type: \"pie\",\n          data: chartData,\n          options: {\n            responsive: false,\n            onClick: async (evt, activeElements) => {\n              if (activeElements.length > 0) {\n                const index = activeElements[0].index;\n                const label = myPieChart.data.labels[index];\n                if (label === \"불량\") {\n                  const detailResponse = await fetch(\"/fault-details\");\n                  const detailData = await detailResponse.json();\n                  const detailCtx = document.getElementById(\"detailPieChart\").getContext(\"2d\");\n                  const labels = detailData.map(item => item[\"사유코드설명\"]);\n                  const counts = detailData.map(item => item.count);\n                  if (detailPieChart) detailPieChart.destroy();\n                  detailPieChart = new Chart(detailCtx, {\n                    type: \"pie\",\n                    data: {\n                      labels: labels,\n                      datasets: [{\n                        data: counts,\n                        backgroundColor: [\"#FF9F40\", \"#FF6384\", \"#36A2EB\", \"#4BC0C0\", \"#4BC0FF\"]\n                      }]\n                    },\n                    options: {\n                      responsive: false,\n                      onClick: (evt, activeElements) => {\n                        if (activeElements.length > 0) {\n                          const index = activeElements[0].index;\n                          const clickedLabel = detailPieChart.data.labels[index];\n                          loadDetailChart(clickedLabel);\n                        }\n                      }\n                    }\n                  });\n                  document.getElementById(\"detailPieChart\").style.display = \"block\";\n                }\n              }\n            }\n          }\n        });\n      } catch (error) {\n        console.error(\"Error creating charts:\", error);\n      }\n    };\n    const loadDetailChart = async reasonCode => {\n      try {\n        const response = await fetch(`/detail-data/${reasonCode}`);\n        const detailData = await response.json();\n        const detailCtx = document.getElementById(\"detailChart\").getContext(\"2d\");\n        const detailLabels = detailData.map(item => item[\"선종\"]);\n        const detailCounts = detailData.map(item => item.count);\n        if (detailChart) {\n          detailChart.destroy();\n        }\n        detailChart = new Chart(detailCtx, {\n          type: \"bar\",\n          data: {\n            labels: detailLabels,\n            datasets: [{\n              data: detailCounts,\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n            }]\n          },\n          options: {\n            responsive: false\n          }\n        });\n        document.getElementById(\"detailChart\").style.display = \"block\";\n      } catch (error) {\n        console.error(\"Error loading detail chart:\", error);\n      }\n    };\n    createCharts();\n\n    // Clean up function to destroy charts on component unmount\n    return () => {\n      if (myPieChart) myPieChart.destroy();\n      if (detailPieChart) detailPieChart.destroy();\n      if (detailChart) detailChart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0AC\\uC720\\uCF54\\uB4DC \\uC124\\uBA85 \\uD30C\\uC774 \\uCC28\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myPieChart\",\n      style: {\n        width: \"50%\",\n        height: \"50%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"detailPieChart\",\n      style: {\n        display: \"none\",\n        width: \"50%\",\n        height: \"50%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"detailChart\",\n      style: {\n        display: \"none\",\n        width: \"50%\",\n        height: \"50%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph5, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Graph5;\nexport default Graph5;\nvar _c;\n$RefreshReg$(_c, \"Graph5\");","map":{"version":3,"names":["React","useEffect","Chart","jsxDEV","_jsxDEV","Graph5","_s","myPieChart","detailPieChart","detailChart","createCharts","response","fetch","data","json","ctx","document","getElementById","getContext","chartData","labels","datasets","정상","불량","backgroundColor","hoverBackgroundColor","type","options","responsive","onClick","evt","activeElements","length","index","label","detailResponse","detailData","detailCtx","map","item","counts","count","destroy","clickedLabel","loadDetailChart","style","display","error","console","reasonCode","detailLabels","detailCounts","children","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["C:/Users/samsung/Documents/GitHub/fisrt_webproject/create_app/src/components/GraphContainer/Graph_5/Graph5.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\n\r\nconst Graph5 = () => {\r\n  useEffect(() => {\r\n    let myPieChart;\r\n    let detailPieChart;\r\n    let detailChart;\r\n\r\n    // 차트를 생성하는 함수\r\n    const createCharts = async () => {\r\n      try {\r\n        const response = await fetch(\"/status-data2\");\r\n        const data = await response.json();\r\n        const ctx = document.getElementById(\"myPieChart\").getContext(\"2d\");\r\n\r\n        const chartData = {\r\n          labels: [\"정상\", \"불량\"],\r\n          datasets: [\r\n            {\r\n              data: [data.정상, data.불량],\r\n              backgroundColor: [\"#36A2EB\", \"#FF6384\"],\r\n              hoverBackgroundColor: [\"#36A2EB\", \"#FF6384\"],\r\n            },\r\n          ],\r\n        };\r\n\r\n        myPieChart = new Chart(ctx, {\r\n          type: \"pie\",\r\n          data: chartData,\r\n          options: {\r\n            responsive: false,\r\n            onClick: async (evt, activeElements) => {\r\n              if (activeElements.length > 0) {\r\n                const index = activeElements[0].index;\r\n                const label = myPieChart.data.labels[index];\r\n\r\n                if (label === \"불량\") {\r\n                  const detailResponse = await fetch(\"/fault-details\");\r\n                  const detailData = await detailResponse.json();\r\n                  const detailCtx = document\r\n                    .getElementById(\"detailPieChart\")\r\n                    .getContext(\"2d\");\r\n                  const labels = detailData.map((item) => item[\"사유코드설명\"]);\r\n                  const counts = detailData.map((item) => item.count);\r\n\r\n                  if (detailPieChart) detailPieChart.destroy();\r\n\r\n                  detailPieChart = new Chart(detailCtx, {\r\n                    type: \"pie\",\r\n                    data: {\r\n                      labels: labels,\r\n                      datasets: [\r\n                        {\r\n                          data: counts,\r\n                          backgroundColor: [\r\n                            \"#FF9F40\",\r\n                            \"#FF6384\",\r\n                            \"#36A2EB\",\r\n                            \"#4BC0C0\",\r\n                            \"#4BC0FF\",\r\n                          ],\r\n                        },\r\n                      ],\r\n                    },\r\n                    options: {\r\n                      responsive: false,\r\n                      onClick: (evt, activeElements) => {\r\n                        if (activeElements.length > 0) {\r\n                          const index = activeElements[0].index;\r\n                          const clickedLabel =\r\n                            detailPieChart.data.labels[index];\r\n                          loadDetailChart(clickedLabel);\r\n                        }\r\n                      },\r\n                    },\r\n                  });\r\n\r\n                  document.getElementById(\"detailPieChart\").style.display =\r\n                    \"block\";\r\n                }\r\n              }\r\n            },\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error creating charts:\", error);\r\n      }\r\n    };\r\n\r\n    const loadDetailChart = async (reasonCode) => {\r\n      try {\r\n        const response = await fetch(`/detail-data/${reasonCode}`);\r\n        const detailData = await response.json();\r\n        const detailCtx = document\r\n          .getElementById(\"detailChart\")\r\n          .getContext(\"2d\");\r\n        const detailLabels = detailData.map((item) => item[\"선종\"]);\r\n        const detailCounts = detailData.map((item) => item.count);\r\n\r\n        if (detailChart) {\r\n          detailChart.destroy();\r\n        }\r\n\r\n        detailChart = new Chart(detailCtx, {\r\n          type: \"bar\",\r\n          data: {\r\n            labels: detailLabels,\r\n            datasets: [\r\n              {\r\n                data: detailCounts,\r\n                backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n              },\r\n            ],\r\n          },\r\n          options: {\r\n            responsive: false,\r\n          },\r\n        });\r\n\r\n        document.getElementById(\"detailChart\").style.display = \"block\";\r\n      } catch (error) {\r\n        console.error(\"Error loading detail chart:\", error);\r\n      }\r\n    };\r\n\r\n    createCharts();\r\n\r\n    // Clean up function to destroy charts on component unmount\r\n    return () => {\r\n      if (myPieChart) myPieChart.destroy();\r\n      if (detailPieChart) detailPieChart.destroy();\r\n      if (detailChart) detailChart.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>사유코드 설명 파이 차트</h1>\r\n      <canvas id=\"myPieChart\" style={{ width: \"50%\", height: \"50%\" }}></canvas>\r\n      <canvas\r\n        id=\"detailPieChart\"\r\n        style={{ display: \"none\", width: \"50%\", height: \"50%\" }}\r\n      ></canvas>\r\n      <canvas\r\n        id=\"detailChart\"\r\n        style={{ display: \"none\", width: \"50%\", height: \"50%\" }}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph5;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}