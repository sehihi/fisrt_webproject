{"ast":null,"code":"const loadChartJs = () => {\n  return new Promise(resolve => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://cdn.jsdelivr.net/npm/chart.js\";\n    script.onload = () => resolve();\n    document.head.appendChild(script);\n  });\n};\nconst Graph5 = () => {\n  return new Promise(resolve => {\n    loadChartJs().then(() => {\n      let myPieChart;\n      let detailPieChart;\n      let detailChart;\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        fetch(\"/status-data2\").then(response => response.json()).then(data => {\n          const ctx = document.getElementById(\"myPieChart\").getContext(\"2d\");\n          const chartData = {\n            labels: [\"정상\", \"불량\"],\n            datasets: [{\n              data: [data.정상, data.불량],\n              backgroundColor: [\"#36A2EB\", \"#FF6384\"],\n              hoverBackgroundColor: [\"#36A2EB\", \"#FF6384\"]\n            }]\n          };\n          myPieChart = new Chart(ctx, {\n            type: \"pie\",\n            data: chartData,\n            options: {\n              responsive: false,\n              onClick: (evt, activeElements) => {\n                if (activeElements.length > 0) {\n                  const index = activeElements[0].index;\n                  const label = myPieChart.data.labels[index];\n                  if (label === \"불량\") {\n                    fetch(\"/fault-details\").then(response => response.json()).then(detailData => {\n                      const detailCtx = document.getElementById(\"detailPieChart\").getContext(\"2d\");\n                      const labels = detailData.map(item => item[\"사유코드설명\"]);\n                      const counts = detailData.map(item => item.count);\n                      if (detailPieChart) detailPieChart.destroy();\n                      detailPieChart = new Chart(detailCtx, {\n                        type: \"pie\",\n                        data: {\n                          labels: labels,\n                          datasets: [{\n                            data: counts,\n                            backgroundColor: [\"#FF9F40\", \"#FF6384\", \"#36A2EB\", \"#4BC0C0\", \"#4BC0FF\"]\n                          }]\n                        },\n                        options: {\n                          responsive: false,\n                          onClick: (evt, activeElements) => {\n                            if (activeElements.length > 0) {\n                              const index = activeElements[0].index;\n                              const clickedLabel = detailPieChart.data.labels[index];\n                              loadDetailChart(clickedLabel);\n                            }\n                          }\n                        }\n                      });\n                      document.getElementById(\"detailPieChart\").style.display = \"block\";\n                    });\n                  }\n                }\n              }\n            }\n          });\n        });\n        function loadDetailChart(reasonCode) {\n          fetch(`/detail-data/${reasonCode}`).then(response => response.json()).then(detailData => {\n            const detailCtx = document.getElementById(\"detailChart\").getContext(\"2d\");\n            const detailLabels = detailData.map(item => item[\"선종\"]);\n            const detailCounts = detailData.map(item => item.count);\n            if (detailChart) {\n              detailChart.destroy();\n            }\n            detailChart = new Chart(detailCtx, {\n              type: \"bar\",\n              data: {\n                labels: detailLabels,\n                datasets: [{\n                  data: detailCounts,\n                  backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n                }]\n              },\n              options: {\n                responsive: false\n              }\n            });\n            document.getElementById(\"detailChart\").style.display = \"block\";\n          });\n        }\n\n        // HTML 요소 생성 및 스타일 적용\n        const container = document.createElement(\"div\");\n        document.body.appendChild(container);\n        const h1 = document.createElement(\"h1\");\n        h1.textContent = \"사유코드 설명 파이 차트\";\n        container.appendChild(h1);\n        const myPieChartCanvas = document.createElement(\"canvas\");\n        myPieChartCanvas.id = \"myPieChart\";\n        myPieChartCanvas.style.width = \"50%\";\n        myPieChartCanvas.style.height = \"50%\";\n        container.appendChild(myPieChartCanvas);\n        const detailPieChartCanvas = document.createElement(\"canvas\");\n        detailPieChartCanvas.id = \"detailPieChart\";\n        detailPieChartCanvas.style.display = \"none\";\n        detailPieChartCanvas.style.width = \"50%\";\n        detailPieChartCanvas.style.height = \"50%\";\n        container.appendChild(detailPieChartCanvas);\n        const detailChartCanvas = document.createElement(\"canvas\");\n        detailChartCanvas.id = \"detailChart\";\n        detailChartCanvas.style.display = \"none\";\n        detailChartCanvas.style.width = \"50%\";\n        detailChartCanvas.style.height = \"50%\";\n        container.appendChild(detailChartCanvas);\n        resolve(); // Promise 완료\n      });\n    });\n  });\n};\n_c = Graph5;\nexport default Graph5;\nvar _c;\n$RefreshReg$(_c, \"Graph5\");","map":{"version":3,"names":["loadChartJs","Promise","resolve","script","document","createElement","src","onload","head","appendChild","Graph5","then","myPieChart","detailPieChart","detailChart","addEventListener","fetch","response","json","data","ctx","getElementById","getContext","chartData","labels","datasets","정상","불량","backgroundColor","hoverBackgroundColor","Chart","type","options","responsive","onClick","evt","activeElements","length","index","label","detailData","detailCtx","map","item","counts","count","destroy","clickedLabel","loadDetailChart","style","display","reasonCode","detailLabels","detailCounts","container","body","h1","textContent","myPieChartCanvas","id","width","height","detailPieChartCanvas","detailChartCanvas","_c","$RefreshReg$"],"sources":["C:/Users/samsung/Documents/GitHub/fisrt_webproject/create_app/src/components/GraphContainer/Graph_5/Graph5.js"],"sourcesContent":["const loadChartJs = () => {\r\n  return new Promise((resolve) => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://cdn.jsdelivr.net/npm/chart.js\";\r\n    script.onload = () => resolve();\r\n    document.head.appendChild(script);\r\n  });\r\n};\r\n\r\nconst Graph5 = () => {\r\n  return new Promise((resolve) => {\r\n    loadChartJs().then(() => {\r\n      let myPieChart;\r\n      let detailPieChart;\r\n      let detailChart;\r\n\r\n      document.addEventListener(\"DOMContentLoaded\", () => {\r\n        fetch(\"/status-data2\")\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            const ctx = document.getElementById(\"myPieChart\").getContext(\"2d\");\r\n\r\n            const chartData = {\r\n              labels: [\"정상\", \"불량\"],\r\n              datasets: [\r\n                {\r\n                  data: [data.정상, data.불량],\r\n                  backgroundColor: [\"#36A2EB\", \"#FF6384\"],\r\n                  hoverBackgroundColor: [\"#36A2EB\", \"#FF6384\"],\r\n                },\r\n              ],\r\n            };\r\n\r\n            myPieChart = new Chart(ctx, {\r\n              type: \"pie\",\r\n              data: chartData,\r\n              options: {\r\n                responsive: false,\r\n                onClick: (evt, activeElements) => {\r\n                  if (activeElements.length > 0) {\r\n                    const index = activeElements[0].index;\r\n                    const label = myPieChart.data.labels[index];\r\n\r\n                    if (label === \"불량\") {\r\n                      fetch(\"/fault-details\")\r\n                        .then((response) => response.json())\r\n                        .then((detailData) => {\r\n                          const detailCtx = document\r\n                            .getElementById(\"detailPieChart\")\r\n                            .getContext(\"2d\");\r\n                          const labels = detailData.map(\r\n                            (item) => item[\"사유코드설명\"]\r\n                          );\r\n                          const counts = detailData.map((item) => item.count);\r\n\r\n                          if (detailPieChart) detailPieChart.destroy();\r\n\r\n                          detailPieChart = new Chart(detailCtx, {\r\n                            type: \"pie\",\r\n                            data: {\r\n                              labels: labels,\r\n                              datasets: [\r\n                                {\r\n                                  data: counts,\r\n                                  backgroundColor: [\r\n                                    \"#FF9F40\",\r\n                                    \"#FF6384\",\r\n                                    \"#36A2EB\",\r\n                                    \"#4BC0C0\",\r\n                                    \"#4BC0FF\",\r\n                                  ],\r\n                                },\r\n                              ],\r\n                            },\r\n                            options: {\r\n                              responsive: false,\r\n                              onClick: (evt, activeElements) => {\r\n                                if (activeElements.length > 0) {\r\n                                  const index = activeElements[0].index;\r\n                                  const clickedLabel =\r\n                                    detailPieChart.data.labels[index];\r\n                                  loadDetailChart(clickedLabel);\r\n                                }\r\n                              },\r\n                            },\r\n                          });\r\n\r\n                          document.getElementById(\r\n                            \"detailPieChart\"\r\n                          ).style.display = \"block\";\r\n                        });\r\n                    }\r\n                  }\r\n                },\r\n              },\r\n            });\r\n          });\r\n\r\n        function loadDetailChart(reasonCode) {\r\n          fetch(`/detail-data/${reasonCode}`)\r\n            .then((response) => response.json())\r\n            .then((detailData) => {\r\n              const detailCtx = document\r\n                .getElementById(\"detailChart\")\r\n                .getContext(\"2d\");\r\n              const detailLabels = detailData.map((item) => item[\"선종\"]);\r\n              const detailCounts = detailData.map((item) => item.count);\r\n\r\n              if (detailChart) {\r\n                detailChart.destroy();\r\n              }\r\n\r\n              detailChart = new Chart(detailCtx, {\r\n                type: \"bar\",\r\n                data: {\r\n                  labels: detailLabels,\r\n                  datasets: [\r\n                    {\r\n                      data: detailCounts,\r\n                      backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n                    },\r\n                  ],\r\n                },\r\n                options: {\r\n                  responsive: false,\r\n                },\r\n              });\r\n\r\n              document.getElementById(\"detailChart\").style.display = \"block\";\r\n            });\r\n        }\r\n\r\n        // HTML 요소 생성 및 스타일 적용\r\n        const container = document.createElement(\"div\");\r\n        document.body.appendChild(container);\r\n\r\n        const h1 = document.createElement(\"h1\");\r\n        h1.textContent = \"사유코드 설명 파이 차트\";\r\n        container.appendChild(h1);\r\n\r\n        const myPieChartCanvas = document.createElement(\"canvas\");\r\n        myPieChartCanvas.id = \"myPieChart\";\r\n        myPieChartCanvas.style.width = \"50%\";\r\n        myPieChartCanvas.style.height = \"50%\";\r\n        container.appendChild(myPieChartCanvas);\r\n\r\n        const detailPieChartCanvas = document.createElement(\"canvas\");\r\n        detailPieChartCanvas.id = \"detailPieChart\";\r\n        detailPieChartCanvas.style.display = \"none\";\r\n        detailPieChartCanvas.style.width = \"50%\";\r\n        detailPieChartCanvas.style.height = \"50%\";\r\n        container.appendChild(detailPieChartCanvas);\r\n\r\n        const detailChartCanvas = document.createElement(\"canvas\");\r\n        detailChartCanvas.id = \"detailChart\";\r\n        detailChartCanvas.style.display = \"none\";\r\n        detailChartCanvas.style.width = \"50%\";\r\n        detailChartCanvas.style.height = \"50%\";\r\n        container.appendChild(detailChartCanvas);\r\n\r\n        resolve(); // Promise 완료\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport default Graph5;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}