{"ast":null,"code":"var _jsxFileName = \"D:\\\\SHI_DT\\\\project\\\\create_app\\\\src\\\\components\\\\LeftContainer\\\\Weather\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  var _forecastData$list$;\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  useEffect(() => {\n    const apiKey = '12cbb94c69458b0c45a01c760c2e7bf1';\n    const latitude = 34.883;\n    const longitude = 128.620;\n    async function fetchWeatherAndForecast() {\n      try {\n        const [weatherResponse, forecastResponse] = await Promise.all([fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`), fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`)]);\n        const weatherData = await weatherResponse.json();\n        const forecastData = await forecastResponse.json();\n        setWeatherData(weatherData);\n        setForecastData(forecastData);\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    }\n    fetchWeatherAndForecast();\n  }, []);\n  const translateDescription = description => {\n    const descriptionMap = {\n      \"clear sky\": \"맑음\",\n      \"few clouds\": \"조금 흐림\"\n      // Add more translations...\n    };\n    return descriptionMap[description] || description;\n  };\n  if (!weatherData || weatherData.cod !== 200) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    description,\n    icon\n  } = weatherData.weather[0];\n  const {\n    temp,\n    humidity,\n    feels_like\n  } = weatherData.main;\n  const {\n    speed\n  } = weatherData.wind;\n  const rainPop = (forecastData === null || forecastData === void 0 ? void 0 : (_forecastData$list$ = forecastData.list[0]) === null || _forecastData$list$ === void 0 ? void 0 : _forecastData$list$.pop) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uB0A0\\uC528: \", translateDescription(description)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://openweathermap.org/img/wn/${icon}@2x.png`,\n      alt: \"Weather Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uAE30\\uC628: \", temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC2B5\\uB3C4: \", humidity, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD48D\\uC18D: \", speed, \" m/s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uCCB4\\uAC10\\uC628\\uB3C4: \", feels_like, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uAC15\\uC218\\uD655\\uB960: \", rainPop * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"RWhmboIl+Dzw2J8xmMooNyYsPRw=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Weather","_s","_forecastData$list$","weatherData","setWeatherData","forecastData","setForecastData","apiKey","latitude","longitude","fetchWeatherAndForecast","weatherResponse","forecastResponse","Promise","all","fetch","json","error","console","translateDescription","description","descriptionMap","cod","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","weather","temp","humidity","feels_like","main","speed","wind","rainPop","list","pop","className","src","alt","_c","$RefreshReg$"],"sources":["D:/SHI_DT/project/create_app/src/components/LeftContainer/Weather/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './Weather.css';\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n\n  useEffect(() => {\n    const apiKey = '12cbb94c69458b0c45a01c760c2e7bf1';\n    const latitude = 34.883;\n    const longitude = 128.620;\n\n    async function fetchWeatherAndForecast() {\n      try {\n        const [weatherResponse, forecastResponse] = await Promise.all([\n          fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`),\n          fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`)\n        ]);\n\n        const weatherData = await weatherResponse.json();\n        const forecastData = await forecastResponse.json();\n\n        setWeatherData(weatherData);\n        setForecastData(forecastData);\n      } catch (error) {\n        console.error('An error occurred:', error);\n      }\n    }\n\n    fetchWeatherAndForecast();\n  }, []);\n\n  const translateDescription = (description) => {\n    const descriptionMap = {\n      \"clear sky\": \"맑음\",\n      \"few clouds\": \"조금 흐림\",\n      // Add more translations...\n    };\n\n    return descriptionMap[description] || description;\n  };\n\n  if (!weatherData || weatherData.cod !== 200) {\n    return <p>Loading weather...</p>;\n  }\n\n  const { description, icon } = weatherData.weather[0];\n  const { temp, humidity, feels_like } = weatherData.main;\n  const { speed } = weatherData.wind;\n  const rainPop = forecastData?.list[0]?.pop || 0;\n\n  return (\n    <div className=\"weather\">\n      <h2>Weather</h2>\n      <p>날씨: {translateDescription(description)}</p>\n      <img src={`https://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"Weather Icon\" />\n      <p>기온: {temp}°C</p>\n      <p>습도: {humidity}%</p>\n      <p>풍속: {speed} m/s</p>\n      <p>체감온도: {feels_like}°C</p>\n      <p>강수확률: {rainPop * 100}%</p>\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAG,kCAAkC;IACjD,MAAMC,QAAQ,GAAG,MAAM;IACvB,MAAMC,SAAS,GAAG,OAAO;IAEzB,eAAeC,uBAAuBA,CAAA,EAAG;MACvC,IAAI;QACF,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC5DC,KAAK,CAAC,uDAAuDP,QAAQ,QAAQC,SAAS,UAAUF,MAAM,eAAe,CAAC,EACtHQ,KAAK,CAAC,wDAAwDP,QAAQ,QAAQC,SAAS,UAAUF,MAAM,eAAe,CAAC,CACxH,CAAC;QAEF,MAAMJ,WAAW,GAAG,MAAMQ,eAAe,CAACK,IAAI,CAAC,CAAC;QAChD,MAAMX,YAAY,GAAG,MAAMO,gBAAgB,CAACI,IAAI,CAAC,CAAC;QAElDZ,cAAc,CAACD,WAAW,CAAC;QAC3BG,eAAe,CAACD,YAAY,CAAC;MAC/B,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;IACF;IAEAP,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,oBAAoB,GAAIC,WAAW,IAAK;IAC5C,MAAMC,cAAc,GAAG;MACrB,WAAW,EAAE,IAAI;MACjB,YAAY,EAAE;MACd;IACF,CAAC;IAED,OAAOA,cAAc,CAACD,WAAW,CAAC,IAAIA,WAAW;EACnD,CAAC;EAED,IAAI,CAACjB,WAAW,IAAIA,WAAW,CAACmB,GAAG,KAAK,GAAG,EAAE;IAC3C,oBAAOvB,OAAA;MAAAwB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,MAAM;IAAEP,WAAW;IAAEQ;EAAK,CAAC,GAAGzB,WAAW,CAAC0B,OAAO,CAAC,CAAC,CAAC;EACpD,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAG7B,WAAW,CAAC8B,IAAI;EACvD,MAAM;IAAEC;EAAM,CAAC,GAAG/B,WAAW,CAACgC,IAAI;EAClC,MAAMC,OAAO,GAAG,CAAA/B,YAAY,aAAZA,YAAY,wBAAAH,mBAAA,GAAZG,YAAY,CAAEgC,IAAI,CAAC,CAAC,CAAC,cAAAnC,mBAAA,uBAArBA,mBAAA,CAAuBoC,GAAG,KAAI,CAAC;EAE/C,oBACEvC,OAAA;IAAKwC,SAAS,EAAC,SAAS;IAAAhB,QAAA,gBACtBxB,OAAA;MAAAwB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB5B,OAAA;MAAAwB,QAAA,GAAG,gBAAI,EAACJ,oBAAoB,CAACC,WAAW,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9C5B,OAAA;MAAKyC,GAAG,EAAE,qCAAqCZ,IAAI,SAAU;MAACa,GAAG,EAAC;IAAc;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnF5B,OAAA;MAAAwB,QAAA,GAAG,gBAAI,EAACO,IAAI,EAAC,OAAE;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnB5B,OAAA;MAAAwB,QAAA,GAAG,gBAAI,EAACQ,QAAQ,EAAC,GAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtB5B,OAAA;MAAAwB,QAAA,GAAG,gBAAI,EAACW,KAAK,EAAC,MAAI;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtB5B,OAAA;MAAAwB,QAAA,GAAG,4BAAM,EAACS,UAAU,EAAC,OAAE;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3B5B,OAAA;MAAAwB,QAAA,GAAG,4BAAM,EAACa,OAAO,GAAG,GAAG,EAAC,GAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5DID,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AA8Db,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}